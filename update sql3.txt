CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ut_viewutanglist`(IN `utang_id` INT, IN `page_no` INT, IN `row_ct` INT)
BEGIN
declare start_no int;
declare end_no int;

declare total_row INT;

if(page_no<1) then set page_no=1;end if;
set start_no = ((page_no-1)*row_ct);

if row_ct>0 and utang_id=0
then
	CREATE TEMPORARY TABLE IF NOT EXISTS tbl AS 
	(SELECT pi.`utang_id`,
    pi.`utang_date`,
    pi.`supplier_id`,
    cs.name,
    cs.address,
    cs.phone_no,
    pi.`restock_id`,
    pi.`value`,
    pi.`paid`,
	  pi.`balance`,
	  pi.`due_date`
	FROM `utang` pi
    INNER JOIN supplier cs ON cs.supplier_id=pi.supplier_id
    

	WHERE (pi.utang_id=utang_id or utang_id=0 OR utang_id is null)
    AND pi.`balance`>0);
    
    SET total_row = (SELECT COUNT(*) FROM tbl LIMIT start_no,row_ct);
    SELECT CEILING(total_row/row_ct) as page_count, tbl.* FROM tbl LIMIT start_no,row_ct;
    DROP TABLE tbl;
else
	SELECT pi.`utang_id`,
    pi.`utang_date`,
    pi.`supplier_id`,
    cs.name,
    cs.address,
    cs.phone_no,
    pi.`restock_id`,
    pi.`value`,
    pi.`paid`,
	  pi.`balance`,
	  pi.`due_date`
	FROM `utang` pi
    INNER JOIN supplier cs ON cs.supplier_id=pi.supplier_id
    

	WHERE (pi.utang_id=utang_id or utang_id=0 OR utang_id is null)
    AND pi.`balance`>0;
end if;
END

CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_us_viewuserlist`(user_id int, page_no int, row_ct int, isactive bit)
BEGIN
declare start_no int;
declare end_no int;

declare total_row INT;

if(page_no<1) then set page_no=1;end if;
set start_no = ((page_no-1)*row_ct);

if row_ct>0 and user_id=0
then
	CREATE TEMPORARY TABLE IF NOT EXISTS tbl AS 
	(SELECT usr.`user_id`,
    usr.`user_name`,
    usr.`password`,
    usr.`user_level`,
    usr.`isactive`
	FROM `user`usr
	WHERE ((usr.isactive=1 AND isactive=1) OR (isactive=0))
	AND (usr.user_id=user_id or user_id=0 OR user_id is null));
    
    SET total_row = (SELECT COUNT(*) FROM tbl LIMIT start_no,row_ct);
    SELECT CEILING(total_row/row_ct) as page_count, tbl.* FROM tbl LIMIT start_no,row_ct;
    DROP TABLE tbl;
else
	SELECT usr.`user_id`,
    usr.`user_name`,
    usr.`password`,
    usr.`user_level`,
    usr.`isactive`
	FROM `user`usr
	WHERE ((usr.isactive=1 AND isactive=1) OR (isactive=0))
	AND (usr.user_id=user_id or user_id=0 OR user_id is null);
end if;
END

CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_st_viewsatuanlist`(satuan_id int, page_no int, row_ct int, isactive bit)
BEGIN
declare start_no int;

declare total_row INT;

if(page_no<1) then set page_no=1;end if;
set start_no = ((page_no-1)*row_ct);

if row_ct>0 and satuan_id=0
then
	CREATE TEMPORARY TABLE IF NOT EXISTS tbl AS 
	(SELECT st.`satuan_id`,
    st.`satuan_nama`,
    st.`remarks`,
    st.`isactive`
	FROM `satuan` st
	WHERE ((st.isactive=1 AND isactive=1) OR (isactive=0))
	AND (st.satuan_id=satuan_id or satuan_id=0 OR satuan_id is null));
    
    SET total_row = (SELECT COUNT(*) FROM tbl LIMIT start_no,row_ct);
    SELECT CEILING(total_row/row_ct) as page_count, tbl.* FROM tbl LIMIT start_no,row_ct;
    DROP TABLE tbl;
else
	SELECT st.`satuan_id`,
    st.`satuan_nama`,
    st.`remarks`,
    st.`isactive`
	FROM `satuan` st
	WHERE ((st.isactive=1 AND isactive=1) OR (isactive=0))
	AND (st.satuan_id=satuan_id or satuan_id=0 OR satuan_id is null);
end if;
END

CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_sp_viewsupplierlist`(supplier_id int, page_no int, row_ct int, isactive bit)
BEGIN
declare start_no int;
declare end_no int;

declare total_row INT;

if(page_no<1) then set page_no=1;end if;
set start_no = ((page_no-1)*row_ct);
if row_ct>0 and supplier_id=0
then
	CREATE TEMPORARY TABLE IF NOT EXISTS tbl AS 
	(SELECT cus.`supplier_id`,
		cus.`name`,
		cus.`address`,
		cus.`phone_no`,
		cus.`remarks`,
		cus.`isactive`
	FROM `supplier` cus
	WHERE ((cus.isactive=1 AND isactive=1) OR (isactive=0))
	AND (cus.supplier_id=supplier_id or supplier_id=0 OR supplier_id is null));
    
    SET total_row = (SELECT COUNT(*) FROM tbl LIMIT start_no,row_ct);
    SELECT CEILING(total_row/row_ct) as page_count, tbl.* FROM tbl LIMIT start_no,row_ct;
    DROP TABLE tbl;
else
	SELECT cus.`supplier_id`,
		cus.`name`,
		cus.`address`,
		cus.`phone_no`,
		cus.`remarks`,
		cus.`isactive`
	FROM `supplier` cus
	WHERE ((cus.isactive=1 AND isactive=1) OR (isactive=0))
	AND (cus.supplier_id=supplier_id or supplier_id=0 OR supplier_id is null);
end if;
END

CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_rs_viewrestocklist`(IN `restock_id` INT, IN `page_no` INT, IN `row_ct` INT, IN `isactive` BIT)
BEGIN
declare start_no int;

declare total_row INT;

if(page_no<1) then set page_no=1;end if;
set start_no = ((page_no-1)*row_ct);

if row_ct>0 and restock_id=0
then
CREATE TEMPORARY TABLE IF NOT EXISTS tbl AS 
	(SELECT rs.`restock_id`,
    rs.`restock_date`,
    rs.`user_id`,
    us.user_name,
    rs.`supplier_id`,
    cs.name,
    cs.address,
    cs.phone_no,
    rs.`total`,
    rs.`discount`,
    rs.`grand_total`,
    rs.`due_date`,
    rs.`isdebt`
FROM `restock`rs

	INNER JOIN user us ON us.user_id=rs.user_id
    LEFT JOIN supplier cs ON cs.supplier_id=rs.supplier_id

	WHERE (rs.restock_id=restock_id or restock_id=0 OR restock_id is null));
    
    SET total_row = (SELECT COUNT(*) FROM tbl LIMIT start_no,row_ct);
    SELECT CEILING(total_row/row_ct) as page_count, tbl.* FROM tbl LIMIT start_no,row_ct;
    DROP TABLE tbl;
else
	SELECT rs.`restock_id`,
    rs.`restock_date`,
    rs.`user_id`,
    us.user_name,
    rs.`supplier_id`,
    cs.name,
    cs.address,
    cs.phone_no,
    rs.`total`,
    rs.`discount`,
    rs.`grand_total`,
    rs.`due_date`,
    rs.`isdebt`
FROM `restock`rs
	INNER JOIN user us ON us.user_id=rs.user_id
    LEFT JOIN supplier cs ON cs.supplier_id=rs.supplier_id

	WHERE (rs.restock_id=restock_id or restock_id=0 OR restock_id is null)
;
end if;
END

CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ri_viewrestockitemlist`(IN `restock_id` INT, IN `page_no` INT, IN `row_ct` INT, IN `isactive` BIT)
BEGIN
declare start_no int;

declare total_row INT;

if(page_no<1) then set page_no=1;end if;
set start_no = ((page_no-1)*row_ct);

if row_ct>0 and restock_id=0
then
CREATE TEMPORARY TABLE IF NOT EXISTS tbl AS 
	(SELECT
	oi.`restock_item_id`,
    oi.`restock_id`,
    pr.product_nama,
    oi.`product_id`,
    st.satuan_nama,
    oi.`price`,
    oi.`quantity`,
    oi.`subtotal`
FROM `restock_item` oi
	INNER JOIN product pr ON pr.product_id=oi.product_id
    INNER JOIN satuan st ON st.satuan_id=pr.satuan_id
	WHERE  (oi.restock_id=restock_id or restock_id=0 OR restock_id is null));
    
    SET total_row = (SELECT COUNT(*) FROM tbl LIMIT start_no,row_ct);
    SELECT CEILING(total_row/row_ct) as page_count, tbl.* FROM tbl LIMIT start_no,row_ct;
    DROP TABLE tbl;
else
	SELECT
	oi.`restock_item_id`,
    oi.`restock_id`,
    pr.product_nama,
    oi.`product_id`,
    st.satuan_nama,
    oi.`price`,
    oi.`quantity`,
    oi.`subtotal`
FROM `restock_item` oi
	INNER JOIN product pr ON pr.product_id=oi.product_id
    INNER JOIN satuan st ON st.satuan_id=pr.satuan_id
	WHERE  (oi.restock_id=restock_id or restock_id=0 OR restock_id is null);
end if;
END

CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_pr_viewproductlist`(IN `product_id` INT, IN `page_no` INT, IN `row_ct` INT, IN `isactive` BIT)
BEGIN
declare start_no int;
declare end_no int;

declare total_row INT;

if(page_no<1) then set page_no=1;end if;
set start_no = ((page_no-1)*row_ct);

if row_ct>0 and product_id=0
then
	CREATE TEMPORARY TABLE IF NOT EXISTS tbl AS 
	(SELECT pr.`product_id`,
    pr.`merk_id`,
    mr.merk_nama,
    pr.`satuan_id`,
    st.satuan_nama,
    pr.`product_nama`,
    pr.`remarks`,
    pr.`stock`,
    pr.`min_stock`,
	  pr.`isactive`,
	  pr.`default_price`,
      pr.supplier_price
	FROM `product` pr
    INNER JOIN merk mr ON mr.merk_id=pr.merk_id
    INNER JOIN satuan st ON st.satuan_id=pr.satuan_id

	WHERE ((pr.isactive=1 AND isactive=1) OR (isactive=0))
	AND (pr.product_id=product_id or product_id=0 OR product_id is null));
    
    SET total_row = (SELECT COUNT(*) FROM tbl LIMIT start_no,row_ct);
    SELECT CEILING(total_row/row_ct) as page_count, tbl.* FROM tbl LIMIT start_no,row_ct;
    DROP TABLE tbl;
else
	SELECT pr.`product_id`,
    pr.`merk_id`,
    mr.merk_nama,
    pr.`satuan_id`,
    st.satuan_nama,
    pr.`product_nama`,
    pr.`remarks`,
	  pr.`stock`,
    pr.`min_stock`,
	  pr.`isactive`,
	  pr.`default_price`,
      pr.supplier_price
	FROM `product` pr
    INNER JOIN merk mr ON mr.merk_id=pr.merk_id
    INNER JOIN satuan st ON st.satuan_id=pr.satuan_id

	WHERE ((pr.isactive=1 AND isactive=1) OR (isactive=0))
	AND (pr.product_id=product_id or product_id=0 OR product_id is null);
end if;
END

CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_pi_viewpiutanglist`(IN `piutang_id` INT, IN `page_no` INT, IN `row_ct` INT)
BEGIN
declare start_no int;
declare end_no int;

declare total_row INT;

if(page_no<1) then set page_no=1;end if;
set start_no = ((page_no-1)*row_ct);

if row_ct>0 and piutang_id=0
then
	CREATE TEMPORARY TABLE IF NOT EXISTS tbl AS 
	(SELECT pi.`piutang_id`,
    pi.`piutang_date`,
    pi.`customer_id`,
    cs.name,
    cs.address,
    cs.phone_no,
    pi.`order_id`,
    pi.`value`,
    pi.`paid`,
	  pi.`balance`,
	  pi.`due_date`
	FROM `piutang` pi
    INNER JOIN customer cs ON cs.customer_id=pi.customer_id
   

	WHERE (pi.piutang_id=piutang_id or piutang_id=0 OR piutang_id is null)
    AND pi.`balance`>0);
    
    SET total_row = (SELECT COUNT(*) FROM tbl LIMIT start_no,row_ct);
    SELECT CEILING(total_row/row_ct) as page_count, tbl.* FROM tbl LIMIT start_no,row_ct;
    DROP TABLE tbl;
else
	SELECT pi.`piutang_id`,
    pi.`piutang_date`,
    pi.`customer_id`,
    cs.name,
    cs.address,
    cs.phone_no,
    pi.`order_id`,
    pi.`value`,
    pi.`paid`,
	  pi.`balance`,
	  pi.`due_date`
	FROM `piutang` pi
    INNER JOIN customer cs ON cs.customer_id=pi.customer_id
    
	WHERE (pi.piutang_id=piutang_id or piutang_id=0 OR piutang_id is null)
    AND pi.`balance`>0;
end if;
END

CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_oi_vieworderitemlist`(IN `order_id` INT, IN `page_no` INT, IN `row_ct` INT, IN `isactive` BIT)
BEGIN
declare start_no int;

declare total_row INT;

if(page_no<1) then set page_no=1;end if;
set start_no = ((page_no-1)*row_ct);

if row_ct>0 and order_id=0
then
CREATE TEMPORARY TABLE IF NOT EXISTS tbl AS 
	(SELECT
	oi.`order_item_id`,
    oi.`order_id`,
    pr.product_nama,
    oi.`product_id`,
    st.satuan_nama,
    oi.`customer_price_id`,
    oi.`customer_price`,
    oi.`quantity`,
    oi.`subtotal`
FROM `order_item` oi
	INNER JOIN product pr ON pr.product_id=oi.product_id
    INNER JOIN satuan st ON st.satuan_id=pr.satuan_id
	WHERE  (oi.order_id=order_id or order_id=0 OR order_id is null))
	;
    
    SET total_row = (SELECT COUNT(*) FROM tbl LIMIT start_no,row_ct);
    SELECT CEILING(total_row/row_ct) as page_count, tbl.* FROM tbl LIMIT start_no,row_ct;
    DROP TABLE tbl;
else
	SELECT
	oi.`order_item_id`,
    oi.`order_id`,
    pr.product_nama,
    oi.`product_id`,
    st.satuan_nama,
    oi.`customer_price_id`,
    oi.`customer_price`,
    oi.`quantity`,
    oi.`subtotal`
FROM `order_item` oi
	INNER JOIN product pr ON pr.product_id=oi.product_id
    INNER JOIN satuan st ON st.satuan_id=pr.satuan_id
	WHERE  (oi.order_id=order_id or order_id=0 OR order_id is null);
end if;
END

CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_od_vieworderlist`(IN `order_id` INT, IN `page_no` INT, IN `row_ct` INT, IN `isactive` BIT)
BEGIN
declare start_no int;

declare total_row INT;

if(page_no<1) then set page_no=1;end if;
set start_no = ((page_no-1)*row_ct);

if row_ct>0 and order_id=0
then
CREATE TEMPORARY TABLE IF NOT EXISTS tbl AS 
	(SELECT od.`order_id`,
    od.`order_date`,
    od.`user_id`,
    us.user_name,
    od.`customer_id`,
    cs.name,
    cs.address,
    cs.phone_no,
    od.`total`,
    od.`discount`,
    od.`grand_total`,
    od.`delivery_date`,
    od.`isdelivered`,
    od.`remarks`,
    od.`due_date`,
    od.`iscredit`
FROM `order`od

	INNER JOIN user us ON us.user_id=od.user_id
    LEFT JOIN customer cs ON cs.customer_id=od.customer_id

	WHERE (od.order_id=order_id or order_id=0 OR order_id is null));
    
    SET total_row = (SELECT COUNT(*) FROM tbl LIMIT start_no,row_ct);
    SELECT CEILING(total_row/row_ct) as page_count, tbl.* FROM tbl LIMIT start_no,row_ct;
    DROP TABLE tbl;
else
	SELECT od.`order_id`,
    od.`order_date`,
    od.`user_id`,
    us.user_name,
    od.`customer_id`,
    cs.name,
    cs.address,
    cs.phone_no,
    od.`total`,
    od.`discount`,
    od.`grand_total`,
    od.`delivery_date`,
    od.`isdelivered`,
    od.`remarks`,
    od.`due_date`,
    od.`iscredit`
FROM `order`od
	INNER JOIN user us ON us.user_id=od.user_id
    LEFT JOIN customer cs ON cs.customer_id=od.customer_id

	WHERE (od.order_id=order_id or order_id=0 OR order_id is null)
;
end if;
END

CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_mr_viewmerklist`(merk_id int, page_no int, row_ct int, isactive bit)
BEGIN
declare start_no int;

declare total_row INT;

if(page_no<1) then set page_no=1;end if;
set start_no = ((page_no-1)*row_ct);


if row_ct>0 and merk_id=0
then
	CREATE TEMPORARY TABLE IF NOT EXISTS tbl AS 
	(SELECT mr.`merk_id`,
    mr.`merk_nama`,
    mr.`remarks`,
    mr.`isactive`
	FROM `merk` mr
	WHERE ((mr.isactive=1 AND isactive=1) OR (isactive=0))
	AND (mr.merk_id=merk_id or merk_id=0 OR merk_id is null))
	;
    SET total_row = (SELECT COUNT(*) FROM tbl LIMIT start_no,row_ct);
    SELECT CEILING(total_row/row_ct) as page_count, tbl.* FROM tbl LIMIT start_no,row_ct;
    DROP TABLE tbl;
else
	SELECT mr.`merk_id`,
    mr.`merk_nama`,
    mr.`remarks`,
    mr.`isactive`
	FROM `merk` mr
	WHERE ((mr.isactive=1 AND isactive=1) OR (isactive=0))
	AND (mr.merk_id=merk_id or merk_id=0 OR merk_id is null);
end if;
END

CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_cs_viewcustomerlist`(customer_id int, page_no int, row_ct int, isactive bit)
BEGIN
declare start_no int;
declare end_no int;

declare total_row INT;

if(page_no<1) then set page_no=1;end if;
set start_no = ((page_no-1)*row_ct);

if row_ct>0 and customer_id=0
then
	CREATE TEMPORARY TABLE IF NOT EXISTS tbl AS 
	(SELECT cus.`customer_id`,
		cus.`name`,
		cus.`address`,
		cus.`phone_no`,
		cus.`remarks`,
		cus.`isactive`
	FROM `customer` cus
	WHERE ((cus.isactive=1 AND isactive=1) OR (isactive=0))
	AND (cus.customer_id=customer_id or customer_id=0 OR customer_id is null)
	);
    
    SET total_row = (SELECT COUNT(*) FROM tbl);
    SELECT CEILING(total_row/row_ct) as page_count, tbl.* FROM tbl LIMIT start_no,row_ct;
    DROP TABLE tbl;
else
	
    SELECT cus.`customer_id`,
		cus.`name`,
		cus.`address`,
		cus.`phone_no`,
		cus.`remarks`,
		cus.`isactive`
	FROM `customer` cus
	WHERE ((cus.isactive=1 AND isactive=1) OR (isactive=0))
	AND (cus.customer_id=customer_id or customer_id=0 OR customer_id is null);
    
end if;
END

CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_cp_viewcustomerpricelist`(customer_id int,product_id int,page_no int,row_ct int,isactive bit)
BEGIN
declare start_no int;
declare end_no int;

declare total_row INT;

if(page_no<1) then set page_no=1;end if;
set start_no = ((page_no-1)*row_ct);


if row_ct>0 and customer_id=0
then
CREATE TEMPORARY TABLE IF NOT EXISTS tbl AS 
	(select cp.customer_price_id,cu.name
	,cu.address,cu.phone_no,cu.remarks,pr.product_nama,cp.price,pr.remarks,mr.merk_nama,st.satuan_nama
	 from customer_price cp
	INNER JOIN customer cu ON cu.customer_id=cp.customer_id
	INNER JOIN product pr ON pr.product_id=cp.product_id
	INNER JOIN merk mr ON mr.merk_id=pr.merk_id
	INNER JOIN satuan st ON st.satuan_id=pr.satuan_id
	where cp.customer_id=customer_id and (cp.product_id=product_id OR product_id=0)
	);
    
    SET total_row = (SELECT COUNT(*) FROM tbl LIMIT start_no,row_ct);
    SELECT total_row, tbl.* FROM tbl;
else
	select cp.customer_price_id,cu.name
	,cu.address,cu.phone_no,cu.remarks,pr.product_nama,cp.price,pr.remarks,mr.merk_nama,st.satuan_nama
	 from customer_price cp
	INNER JOIN customer cu ON cu.customer_id=cp.customer_id
	INNER JOIN product pr ON pr.product_id=cp.product_id
	INNER JOIN merk mr ON mr.merk_id=pr.merk_id
	INNER JOIN satuan st ON st.satuan_id=pr.satuan_id
	where cp.customer_id=customer_id and (cp.product_id=product_id OR product_id=0);
    
end if;
END